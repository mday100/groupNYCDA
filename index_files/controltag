
/* Controltag Loader for ESI Media */
(function(){
  function debugLog(msg) {
    var isDebug = /kxdebug=(1|true)/.test(location);
    if (isDebug && typeof window.console === 'object' && typeof console.info === 'function') {
      console.info(msg);
    }
  }

  function loadCT(url, callback) {
    debugLog('Loading Krux control tag.');
    var ct_element = document.createElement('script');
    ct_element.async = true;
    ct_element.src = url;

    ct_element.onload = ct_element.onreadystatechange = function() {
      var state = ct_element.readyState;
      if (!callback.done && (!state || /loaded|complete/.test(state))) {
        callback.done = true;
        callback();
      }
    };

    // Fetch the first script element, so we can insert the
    // controltag before it. There *must* be at least one
    // script element, or this code would never be called
    var sibling = document.getElementsByTagName('script')[0];
    sibling.parentNode.insertBefore(ct_element, sibling);
  };

  function loadConfig() {
    
    
    debugLog('Loading krux configuration.');

    var config = {"partner_segment_map": {}, "context_terms": [{"id": "JDhNd4ii", "value": "Apple"}, {"id": "JDhNd5m4", "value": "iPhone"}, {"id": "JDhNd5v1", "value": "Android"}, {"id": "JDhNd55M", "value": "Smartphone"}, {"id": "JDhNd6C_", "value": "Samsung"}, {"id": "JDhNd6MD", "value": "Review"}, {"id": "JDhNd6ZT", "value": "Two-bed"}, {"id": "JDhNd6lP", "value": "Three-bed"}, {"id": "JDhNd6xF", "value": "Four-bed"}, {"id": "JDhNd68j", "value": "One-bed"}, {"id": "JDhNd7IJ", "value": "Studio"}, {"id": "JDhNd7UA", "value": "Apartment"}, {"id": "JDhNd7fo", "value": "Flat"}, {"id": "JDhNd7rK", "value": "House"}, {"id": "JDhNd722", "value": "Boris Johnson"}, {"id": "JDhNd8Cp", "value": "David Cameron"}, {"id": "JDhNd8OC", "value": "George Osborne"}, {"id": "JDhNd8pB", "value": "Ed Milliband"}, {"id": "JDhNd9bY", "value": "Tessa Jowell"}, {"id": "JDhNd9oa", "value": "Nick Clegg"}, {"id": "JDhNd94T", "value": "Nigel Farage"}, {"id": "JDhNd-Ua", "value": "Richard Charteris"}, {"id": "JDhNd-gS", "value": "John Bercow"}, {"id": "JDhNd-sJ", "value": "Sally Bercow"}, {"id": "JDhNd-4X", "value": "Prince William"}, {"id": "JDhNd_GO", "value": "Prince George"}, {"id": "JDhNd_VF", "value": "Duke of Cambridge"}, {"id": "JDhNd_j-", "value": "Duchess of Cambridge"}, {"id": "JDhNd_9d", "value": "Kate Middleton"}, {"id": "JDhNeAUR", "value": "Prince Charles"}, {"id": "JDhNeAgW", "value": "Prince Harry"}, {"id": "JDhNeAsH", "value": "Prince of Wales"}, {"id": "JDhNeA9z", "value": "Duchess of Cornwall"}, {"id": "JDhNeBJ5", "value": "Prince Phillip"}, {"id": "JDhNeChX", "value": "Duke of Edinburgh"}, {"id": "JDhNeCuZ", "value": "Duke of Cornwall"}, {"id": "JDhNeC6c", "value": "The Queen"}, {"id": "JDhNeDHa", "value": "Zara Tindall"}, {"id": "JDhNeDTe", "value": "House of Commons"}, {"id": "JDhNeDfW", "value": "House of Lords"}, {"id": "JDhNeDrb", "value": "Parliament"}, {"id": "JDhNeD4S", "value": "Downing Street"}, {"id": "JDhNeEFK", "value": "Westminster"}, {"id": "JDhNeERF", "value": "Council"}, {"id": "JDhNeEdK", "value": "Borough"}, {"id": "JDhNeEpL", "value": "Greater London Authority"}, {"id": "JDhNeE1S", "value": "Jose Mourinho"}, {"id": "JDhNeFBA", "value": "Arsene Wenger"}, {"id": "JDhNeFM9", "value": "Chelsea"}, {"id": "JDhNeFZM", "value": "Arsenal"}, {"id": "JDhNeFlr", "value": "Tottenham Hotspur"}, {"id": "JDhNeFx6", "value": "Spurs"}, {"id": "JDhNeF-Y", "value": "Crystal Palace"}, {"id": "JDhNeGLj", "value": "West Ham"}, {"id": "JDhNeGXe", "value": "QPR"}, {"id": "JDhNeGju", "value": "Charlton Athletic"}, {"id": "JDhNeGvv", "value": "London Irish"}, {"id": "JDhNeG8S", "value": "London Wasps"}, {"id": "JDhNeHI0", "value": "Harlequins"}, {"id": "JDhNeHVx", "value": "Saracens"}, {"id": "JDhNeHip", "value": "Surrey"}, {"id": "JDhNeIC1", "value": "Oval"}, {"id": "JDhNeIPs", "value": "Lords"}, {"id": "JDhNeIc9", "value": "Middlesex"}, {"id": "JDhNeIpQ", "value": "Wimbledon"}, {"id": "JDhNeI1G", "value": "Boat race"}, {"id": "JDhNeJBc", "value": "Sam Allardyce"}, {"id": "JDhNeJNs", "value": "Liverpool"}, {"id": "JDhNeJZs", "value": "Roy Hodgson"}, {"id": "JDhNeJls", "value": "Andy Murray"}, {"id": "JDhNeJx7", "value": "Laura Robson"}, {"id": "JDhNeJ-l", "value": "Bank Holiday"}, {"id": "JH_E9MbD", "value": "Hat-trick"}, {"id": "JH_E9NUf", "value": "three"}, {"id": "JH_E9Nt_", "value": "winning"}, {"id": "JH_E9Omr", "value": "pride"}, {"id": "JH_E9O5L", "value": "triumphant"}, {"id": "JH_E9PqV", "value": "high achievers"}, {"id": "JH_E9QAr", "value": "winners"}, {"id": "JH_E9Qko", "value": "Final"}, {"id": "JH_E9RMy", "value": "Semi-final"}, {"id": "JH_E9RmD", "value": "Quarter Final"}, {"id": "JH_E9SVJ", "value": "World Cup"}, {"id": "JH_E9S01", "value": "Algeria"}, {"id": "JH_E9Tas", "value": "Argentina"}, {"id": "JH_E9Uj-", "value": "Australia"}, {"id": "JH_E9VAt", "value": "Belgium"}, {"id": "JH_E9VTS", "value": "Bosnia"}, {"id": "JH_E9V10", "value": "Bosnia Herzegovina"}, {"id": "JH_E9WLX", "value": "Bosnia & Herzegovina"}, {"id": "JH_E9Wll", "value": "Brazil"}, {"id": "JH_E9XYh", "value": "Cameroon"}, {"id": "JH_E9YPZ", "value": "Chile"}, {"id": "JH_E9Y2j", "value": "Colombia"}, {"id": "JH_E9ae4", "value": "Costa Rica"}, {"id": "JH_E9a-u", "value": "Cote d'Ivoire"}, {"id": "JH_E9bqW", "value": "Ivory Coast"}, {"id": "JH_E9ckm", "value": "Croatia"}, {"id": "JH_E9dGx", "value": "Ecuador"}, {"id": "JH_E9dok", "value": "England"}, {"id": "JH_E9eGu", "value": "France"}, {"id": "JH_E9ehq", "value": "Germany"}, {"id": "JH_E9fC0", "value": "Ghana"}, {"id": "JH_E9fxk", "value": "Greece"}, {"id": "JH_E9ggV", "value": "Honduras"}, {"id": "JH_E9g5C", "value": "Iran"}, {"id": "JH_E9hLp", "value": "Italy"}, {"id": "JH_E9hdF", "value": "Japan"}, {"id": "JH_E9h8Q", "value": "Mexico"}, {"id": "JH_E9iUl", "value": "Netherlands"}, {"id": "JH_E9ilr", "value": "Nigeria"}, {"id": "JH_E9jOd", "value": "Portugal"}, {"id": "JH_E9jif", "value": "Russia"}, {"id": "JH_E9jzk", "value": "South Korea"}, {"id": "JH_E9kNP", "value": "Spain"}, {"id": "JH_E9ksR", "value": "Switzerland"}, {"id": "JH_E9lLc", "value": "Uruguay"}, {"id": "JH_E9lc1", "value": "USA"}, {"id": "JH_E9lt4", "value": "Brazuca"}], "tags": [{"content": "<script type=\"text/javascript\">\r\n// DFP premium.\r\n(function(require) {\r\n  var store = require('store');\r\n  var _ = require('util');  \r\n  var segments;\r\n  \r\n  function handleUserDataResponse(r) {\r\n    // Handle the response as usual.\r\n    segments.handleUserDataResponse(r);\r\n    \r\n    // Override localStorage.kxuser with a case-insensitive value for DFP premium.\r\n    // This will get read by the interchange direct snippet for Krux.user\r\n    // and Krux.dfpKeyValues\r\n    if(r.kuid_long) {\r\n      store.set('user', r.kuid_long, store.DAYS*30);\r\n    }\r\n  }\r\n  \r\n  // Our own fetch uses our own handleResponse\r\n  function fetch() {\r\n    var options = {\r\n      url: _.get('url_userData'),\r\n      data: {pubid: _.get('pubid')},\r\n      callback: 'kxjsonp_userData',\r\n      done: handleUserDataResponse\r\n    };\r\n    if(!segments.readTechFromStore()) {\r\n      options.data.technographics = 1;\r\n    }\r\n    require('http').jsonp(options);  \r\n  }\r\n  \r\n  \r\n  if(!store.get('segWait')) {\r\n    // disable segments.fetch and use our own\r\n    _.set('segWait', 1, store.MINUTES*5);\r\n    _.onOnce('dom:load', fetch);\r\n    _.fire('user_data_fetch_scheduled');\r\n  }\r\n  \r\n  // Finally, require segments as usual.\r\n  segments = require('segments');\r\n}(Krux.require));\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 2, "internal": 1, "content_type": "html", "timing": "asap", "type": "publisher", "id": 28460, "name": "Krux Load Segments"}, {"content": "<script>\r\n// this tag is intentionally blank\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 6, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 28463, "name": "Technographic Data provider tag"}, {"content": "", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 14, "content_type": "html", "freq_cap": 3, "timing": "onload", "id": 28464, "name": "Krux Geographic Data provider tag"}, {"content": "<script type=\"text/javascript\">Krux('social.init');</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "internal": 1, "method": "document", "execution_results": null, "tier": 1, "library_tag_config": {}, "content_type": "html", "timing": "onload", "type": "library", "id": 29133, "name": "Krux Track Social"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: \"//p.acxiom-online.com/pixel/sci\",\r\n      data: {\r\n          uid: kuid,\r\n          _kdpid: 'f19b7626-3732-4dcc-bac5-8d2c937dae9a',\r\n          pid: 3021\r\n      }});\r\n  }\r\n  })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 21, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 29139, "name": "Acxiom S2S provider tag"}, {"content": "<script>\r\n(function() {\r\n  // krxd.nexac.com throws SSL cert errors so only fire this tag\r\n  // on HTTP pages\r\n  if (location.protocol == \"http:\") {\r\n      var Krux = window.Krux;\r\n      var kuid = Krux('get', 'user');\r\n      if (kuid) {\r\n         var u = \"http://krxd.nexac.com/dlx.gif?_kdpid=2dd640a6-6ebd-4d4f-af30-af8baa441a0d&kuid=\" + kuid;\r\n         (new Image()).src = u;\r\n      }\r\n   }\r\n})();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 8, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 29140, "name": "DataLogix provider tag"}, {"content": "<script>\r\n(function(){\r\n  if (window.KRUX) {\r\n    var pubid = KRUXSetup.pubid;\r\n  } else if (window.Krux) {\r\n    var pubid = Krux('get', 'pubid');\r\n  } else { \r\n    return;\r\n  }\r\n  var prefix = location.protocol == 'https:' ? \"https:\" : \"http:\";\r\n  var kurl = prefix + '//beacon.krxd.net/data.gif?_kdpid=890a6228-04af-4630-85b6-0b49dee6157f&pid=' + pubid;\r\n  var u = prefix + '//api.bizographics.com/v1/profile.redirect?api_key=595bae8dbc0c4c42b4544e688b10c002' + \r\n        '&callback_url=' + escape(kurl);\r\n  var i = new Image();\r\n  i.src = u;\r\n})();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 2, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 29141, "name": "Bizo provider tag"}, {"content": "<script>\r\n(function(){\r\n  var kuid = Krux('get', 'user');\r\n  if (kuid) {\r\n    Krux('require:http').pixel({\r\n      url: \"//loadm.exelator.com/load\",\r\n      data: {\r\n          _kdpid: 'e4942ff0-4070-4896-a7ef-e6a5a30ce9f9',\r\n          buid: kuid,\r\n          p: '204',\r\n          g: '270',\r\n          j: '0'\r\n      }});\r\n  }\r\n  })();\r\n</script>", "target": null, "target_action": "append", "require": "", "docwrite": null, "method": "document", "execution_results": null, "tier": 1, "internal": 11, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "data provider", "id": 29142, "name": "eXelate Media provider tag"}, {"content": "<script>\r\nKrux('scrape', { \"page_attr_url_path_1\": {url_path: \"1\"}});\r\nKrux('scrape', { \"page_attr_url_path_2\": {url_path: \"2\"}});\r\nKrux('scrape', { \"user_attr_cookie_asi_segs\": {cookie: \"asi_segs\"}});\r\nKrux('set', 'page_attr_omniture_channel', typeof window.s =='object' && window.s['channel']);\r\nKrux('set', 'page_attr_omniture_prop2', typeof window.s =='object' && window.s['prop2']);\r\nKrux('scrape', { \"page_attr_channelname\": {js_global: \"ChannelName\"}});\r\nKrux('set', 'section',  Krux('get', 'page_attr_url_path_1'));\r\nKrux('set', 'subsection',  Krux('get', 'page_attr_url_path_2'));\r\n</script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": false, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "timing": "onload", "type": "publisher", "id": 29023, "name": "DTC v1"}, {"content": "<script type='text/javascript'>\r\nvar pubId=40991;\r\nvar pixId=203;\r\n</script>\r\n<script src='//ads.pubmatic.com/AdServer/js/universalpixel.js' type='text/javascript'></script>", "target": "", "target_action": null, "require": "", "docwrite": null, "method": "document", "execution_results": {"onloadSafe": true, "docwrite": true, "listeners": []}, "tier": 1, "internal": 1, "content_type": "html", "freq_cap": 3, "timing": "onload", "type": "publisher", "id": 30192, "name": "Pubmatic User Match"}], "segments": [], "publisher": {"uuid": "8dc3c31a-331c-4c9b-a044-a82b2e82e330", "id": 12175, "name": "ESI Media"}, "controltag_options": {"async": "true", "render": true}, "site": {"id": 16455, "name": "Independent"}, "dnt": null, "params": {"revenue_optimization": false, "control_tag_pixel_throttle": "100", "context_terms": "true", "jslog_host": "jslog.krxd.net", "capture_js_errors": "true", "control_tag_load_sync": "false", "site_level_supertag_config": "site", "max_slot_time": 1000, "services_host": "apiservices.krxd.net", "capture_leakage": true, "client_side_storage": "localStorage,cookie", "control_tag_stats_prefix": null, "user_id_cookie": null, "no_pii": 0, "beacon_host": "beacon.krxd.net", "control_tag_namespace": null, "control_tag_version": "stable", "datatag_version": "3", "supertag_requires_approval": false}, "services": {"impression": "//beacon.krxd.net/ad_impression.gif", "stats": "//apiservices.krxd.net/stats", "log": "//jslog.krxd.net/jslog.gif", "userData": "//apiservices.krxd.net/user_data/segments/3", "optout": "//beacon.krxd.net/optout_check", "pixel": "//beacon.krxd.net/pixel.gif", "um": "//apiservices.krxd.net/um", "social": "//beacon.krxd.net/social.gif", "data": "//beacon.krxd.net/data.gif", "event": "//beacon.krxd.net/event.gif"}, "geo": {}, "realtime_segments": [], "confid": "I8gY_o93"};

    // Wrap in a function and comment, then toString the func and replace
    // everything that's not the beginning or end of a JSON object, so we get a
    // string that's either empty or JSON.
    var esiGeo = String(function(){/*
      <esi:include src="/geoip_esi"/>
    */}).replace(/^.*\/\*[^{]+|[^}]+\*\/.*$/g, '');

    if (esiGeo) {
      config.geo = esiGeo;
    }

    Krux('config', config);
    
  };

  loadCT( "//cdn.krxd.net/ctjs/controltag.js.36fec01aa23444783514e74efb6b7d64", loadConfig );
})();
